
def solve(nums):
    maxi = float("-inf")

    for i in range(len(nums)):
        for j in range(i, len(nums)):
            temp = 1
            for k in range(i, j+1):
                temp *= nums[k]
                if temp > maxi:
                    maxi = temp

    return maxi

def printtab(arr):
    for i in arr:
       print(i, )


def solve_dyn(nums):               #ne
    dp = [[float("-inf")]*len(nums) for i in range(len(nums))]
    temp = 1
    for i in range(len(nums)):
        temp *= nums[i]
        dp[0][i] = temp
        dp[i][0] = temp

    for i in range(1,len(nums)):
        for j in range(i,len(nums)):
            if i == j:
                dp[i][j] = nums[i]
            else:
                dp[i][j] = dp[i][j-1] * nums[j]

    printtab(dp)

    maxi = float("-inf")
    for i in dp:
        for j in i:
            maxi = max(maxi, j)

    return maxi


def solve_dp(nums):

    if len(nums) == 0:
        return 0

    maxValue = minValue = nums[0]
    maxi = nums[0]
    for i in range(1, len(nums)):
        if nums[i] < 0:
            maxValue, minValue = minValue, maxValue

        maxValue = max(nums[i], maxValue*nums[i])
        minValue = min(nums[i], minValue*nums[i])

        maxi = max(maxi, maxValue)
        print("max: ", maxValue, " min: ", minValue)


    return maxi

nums = [2, 3, -2, 4]
nums1 = [-2, 0, -1]
nums2 = [0, 0, -1]
nums3 = [1]
nums4 = [-1]
nums5 = [-3, 3, 4, -1, 2, 6, -2, -1]
nums6 = [1,-5,6,-5,2,-4,-5,0,3,2,-4,0,-5,-3,-1,-4,-1,4,1,-1,-3,-1,1,3,-4,-6,-2,5,1,-5,0,-1,-5,0,1,2,6,1,2,-6,5,5,0,1,0,1,1,-1,-1,3,1,0,4,-3,0,4,-4,-1,6,5,5,6,-6,1,1,3,4,3,-1,-3,0,-5,-4,1,5,-2,3,-1,2,1,1,6,0,5,-5,6,-6,3,0,4,-1,3,6,0,-2,0,-1,6,4,1,-5,1,0,1,-1,-1,3,5,5,4,2,5,0,-1,5,2,2,-3,-1,-1,0,-6,-2,-5,1,-2,2,0,0,2,-3,-2,-4,1,1,-4,-3,-1,0,0,1,-3,-2,3,-4,5,2,-1,4,1,5,6,0,1,1,-2,-1,0,-1,-5,5,6,6,-1,-1,0,-4,2,1,3,-5,6,-5,-1,-1,-3,-1,-4,-2,-1,-1,1,-3,-4,0,1,-3,4,3,2,-2,6,-3,-6,-6,-2,-5,1,2,0,-1,0,0,-2,3,-4,2,4,3,-1,3,1,0,2,1,-1,0,5,-1,-3,-6,-5,0,6,6,-6,-5,4,-2,-1,0,4,6,-3,1,-1,0,1,-5,5,-3,-3,-3,-1,-1,4,0,-2,-4,3,5,5,-1,-1,-5,-2,-4,-4,6,0,-3,-1,-5,-3,-1,6,1,-5,-1,0,1,-4,-5,0,0,0,-3,-5,-1,-4,-1,5,5,-4,4,-1,6,-1,1,-1,2,-2,-3,0,1,0,0,-3,0,2,5,-6,-3,-3,3,-4,-2,-6,-1,1,4,4,0,-6,-5,-6,-3,5,-3,1,-4,6,-2,0,-4,-1,0,-1,0,6,-6,0,5,0,1,-3,6,1,-1,1,0,-1,1,-1,-6,-3,4,-1,-4,6,4,-1,-3,2,-6,5,0,4,-2,1,0,4,-2,2,0,0,5,5,-3,4,3,-5,2,2,6,-1,-2,1,-3,1,-1,6,-4,0,0,0,2,-5,-4,2,6,-3,-6,-1,-6,0,0,2,-1,6,-4,-5,-1,0,-3,-3,-1,0,-4,3,1,5,0,2,5,0,4,-5,-1,3,1,-1,-1,1,1,-2,3,5,4,6,2,6,-6,5,2,-3,0,-1,-1,3,1,1,1,-2,-5,3,-1,3,0,-1,3,1,1,-2,6,3,-6,5,-5,-5,0,-2,-3,-3,-4,6,-1,-6,6,-3,-5,1,-1,0,0,1,4,-5,0,1,-2,6,1,-3,-5,0,4,-2,1,-5,-4,0,0,-1,-2,0,2,-2,5,6]
print(solve_dp(nums4))
